애플리케이션 계층
 - 일반 사용자들이 사용하는 프로그램이 있는 계층
 - 사용자는 프로그램을 사용하여 통신을 하게 되는 것

(1) 애플리케이션 관련 서비스
1. FTP
  - File Transter Protocol
  - 사용자 파일의 업로드 혹은 다운로드를 수행하는 프로그램
  - 파일 전송을 위한 인터넷 표준으로 제어 접속과 데이터 접속을 위한 분리된 포트를 사용

2. DNS
  - Domain Name System
  - DNS Query를 사용해서 DNS server에 URL을 전송하고 해당 URL에 매핑되는 IP주소를 제공하는 서비스

3. HTTP
  - Hyper Text Transfer Protocol
  - 웹브라우저와 웹 서버 사이에 웹 페이지의 Request 및 Response를 수행하는 프로토콜

4. Telnet 
  - 특정 지여그이 사용자가 지역적으로 다른 곳에 위치한 컴퓨터를 온라인으로 연결하여 사용하는 서비스

5. SMTP
  - Simple Mail Reanster Protocol
  - REC 821에 명시된 인터넷 전자우편을 위한 프로토콜로 메시지 전달을 위해서 Store and Forward 방식을 사용
  - 암호화 및 인증 기능 없이 사용자의 E-Mail을 전송하는 프로토콜

6. SNMP 
  - Simple Network Management Protocol
  - 네트워크에 대한 트래픽, 세견 드읭 네트워크 상태를 모니터링하고 정보를 전달할 때 사용되는 프로토콜

HTTP
(1) HTTP 프로토콜 개요
  - 개방형 프로토콜로 송수신되는 메시지의 구조가 공개
  - 송신과 수신을 할 때 사용되는 HTTP 프로토콜은 RCP라는 프로토콜을 사용
  - state-less 프로토콜

  - WWW(World Wide Web)로 싲가되는 인터넷에서 웹 서버와 사용자의 인터넷 브라우저 사이에 문서를 전송하기 위해 사요오디는 통신 프로토콜
  - TCP 기반 프로토콜의 80번 Port를 사용하고 Request 및 Response 구조를 가짐
  - State-less로 프로토콜을 구성

(2) HTTP Version 1.0
  - 연결을 수행할 때마다 3-Way Handshaking 기법을 사용
  - HTML 페이지를 수신 받고 완전히 연결을 종료시킴
  - 필요 시 다시 연결하고 페이지를 수신받음
  * 3-Way Handshaking: 웹브라우저가 웹 서버에 SYN 메시지를 보내면 웹 서버는 웹브라우저에게 SYN, ACK로 응답
                       웹브라우저는 웹 서버에 최종 연결확립 메세지인 ACK를 전송해서 웹 서버와 연결을 확립

- 연결 확립 시 TCP의 연결 정보는 ESTAB-LISHED 상태로 변경

(3) HTTp Version 1.1
  - Keep Alive Connection을 지원
  - 연속된 연결 요청이 있을 경우 HTML 페이지를 수신받고 연결을 종료하지 않은 상태에서 이미지 등을 요청하는 형태의 서비스
  - 연속적인 요청시 연결을 유지한 상태에서 서비스를 수행

(4) HTTP 세션 연결 과정
  1. 웹 서버는 서비스 포트를 개방 후 크라이언트의 요청을 대기
  2. 클라이언트가 웹 서버 접속 요청(SYN)을 시도
  3. 클라이언트 요청에 대한 응답(SYN, ACK)을 함
  4. 클라이언트는 응답에 대한 확인 메시지(ACK)를 전송
  5. TCP-PUSH 빠른 처리, HTTP-GET 페이지를 요청
  6. 서버 측은 클라이언트 요청에 대한 점검(Checksum을 통한 무결성 확인)을 함
  7. 요청 HTML 페이지를 클라이언트에게 전송
  8. 클라이언트는 정송 데이터를 점검(Checksum을 통한 무결성 확인)
  * 2~4번 과정을 TCP의 3-Way Handshaking이라 함

(5) HTTP 프로토콜 구조
  - HTTP Header + Body
  - Header: HTTP Request 시에 전달해야 하는 웹브라우저 정보, 요청방식, 피라미터 등이 있음
  - Body: quest 할 때는 사용되지 않고 POST 방식의 Request 시 Body에 파라미터 정보를 넣고 전송하는 GET 방식
  - 연결을 종료하지 않고 유지되는 Keep Alive Connection을 지원
  - HTTP는 Header와 Body로 구분되며 Header와 Body 사이에 개행문자가 존재
  - 개행문자는 "\r\n\r\n"으로 구분


  
